events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    server {
        listen 80;
        server_name localhost;

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    server {

        listen 443 ssl;
        server_name localhost;

        # Path to SSL certificate and key files
        # ssl_certificate /etc/letsencrypt/${SSL_CERT_FILE};
        # ssl_certificate_key /etc/letsencrypt/${SSL_KEY_FILE};
        ssl_certificate ${SSL_TARGET_MOUNTED_DIRECTORY}/${SSL_CERT_FILE};
        ssl_certificate_key ${SSL_TARGET_MOUNTED_DIRECTORY}/${SSL_KEY_FILE};

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        client_max_body_size 24000M;


        root /usr/share/nginx/html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api {
            proxy_pass http://server:8000/api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /minio {
            proxy_pass http://minio:9000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 24000M;
        }

        location /data {
            proxy_pass http://minio:9000/data;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 24000M;
        }



        location ~* \.(ico|css|js|gif|jpe?g|png)$ {
            # Cache-control headers for static files
            expires max;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }
    }
}
events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    server {

        listen 80;

        client_max_body_size 24000M;

        server_name localhost;

        root /usr/share/nginx/html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api {
            proxy_pass http://server:8000/api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /data {
            proxy_pass http://data:9000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 24000M;
        }

        location /ws/ {
            proxy_pass http://duckdb:3000/;  # Forwarding to your DuckDB server
            proxy_http_version 1.1;  # Required for WebSocket
            proxy_set_header Upgrade $http_upgrade;  # Handle WebSocket upgrade requests
            proxy_set_header Connection "Upgrade";  # Maintain connection upgrade
            proxy_set_header Host $host;  # Forward the original host header
            proxy_set_header X-Real-IP $remote_addr;  # For logging the real client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # Keep protocol information
            proxy_read_timeout 86400;  # Prevent timeouts for long-lived connections
        }

        location ~* \.(ico|css|js|gif|jpe?g|png)$ {
            # Cache-control headers for static files
            expires max;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }
    }
}